#!/bin/bash
HELP_DESC=$(cat << 'EOL'
Show list of hypervisors and KVMs of cloud manager platform
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1                            First PATTERN filtering allowed KVMs
$2                            Second PATTERN filtering allowed KVMs
$3                            Third PATTERN filtering allowed KVMs
--json                        Json outout option
--beauty                      Using together with --json option to beautify json output
--nocache                     Force hypervisors parsing without cache output
--hypers=HPR-pattern          Filter hypervisors by pattern
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-cm
cld-cm --json
EOL
)

source /var/cld/bin/include/cldfuncs
source /var/cld/cm/bin/include/create_funcs
ARG1=$(echo "${@:1}" | tr ' ' '\n' | grep -v '\--' | head -1)
ARG2=$(echo "${@:1}" | tr ' ' '\n' | grep -v '\--' | head -2 | tail -1)
ARG3=$(echo "${@:1}" | tr ' ' '\n' | grep -v '\--' | head -3 | tail -1)

init-load-constants HYPERVISOR_NAME_PREFIX\|HPR

for OPTS in ${@:1}
do
echo $OPTS | grep -q  '^\--hypers=' && HPRS="$(echo $OPTS | cut -d '=' -f 2)"
echo $OPTS | grep -q  '^\--json' && JSON=1
echo $OPTS | grep -q  '^\--beauty' && JSON_BEAUTY=1
echo $OPTS | grep -q  '^\--minify' && JSON_MINIFY=1
echo $OPTS | grep -q  '^\--nocache' && NOCACHE=1
done

ALLOWED_HPRS=$(CLOUDS_USER_ALLOWED ${HPRS} | grep -i "^$HYPERVISOR_NAME_PREFIX" | cut -d _ -f 1 | head -c -1)
[ "$ALLOWED_HPRS" ] || echoexit1 There is no allowed hypervisors for this user $SUDO_USER

[ "$NOCACHE" ] || NOCACHE=0

if [ "$JSON_BEAUTY" == "1" -a "$FROM" == "API" ]
then
JSON_BEAUTY_ARG=$(cat << EOL
| jq  -C '[ .[] | select( .hypervisor | contains($(echo "$ALLOWED_HPRS" | awk '{print "\x22"$1"\x22,"}' | head -c -2))) ]'
EOL
)
elif [ "$JSON_MINIFY" == "1" ]
then
JSON_BEAUTY_ARG=$(cat << EOL
| jq  -c '[ .[] | select( .hypervisor | contains($(echo "$ALLOWED_HPRS" | awk '{print "\x22"$1"\x22,"}' | head -c -2))) ]'
EOL
)
else
JSON_BEAUTY_ARG=$(cat << EOL
| jq '[ .[] | select( .hypervisor | contains($(echo "$ALLOWED_HPRS" | awk '{print "\x22"$1"\x22,"}' | head -c -2))) ]'
EOL
)
fi

if [ "$JSON" == "1" ]
then
source <(echo -n get-kvm-list-json "$ARG1" "$ARG2" "$ARG3" ${JSON_BEAUTY_ARG})
else
get-kvm-list | grep -i "$ARG1" | grep -i "$ARG2" | grep -i "$ARG3"
fi
grep -vs "^#" /etc/cron.d/* | egrep -s "cld-cm \-\-json.+\-\-nocache" | grep -qs root || echo '* * * * * root /var/cld/cm/bin/cld-cm --json --nocache &>/dev/null' >> /etc/cron.d/cld